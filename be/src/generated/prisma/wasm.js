
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  avatarUrl: 'avatarUrl',
  isEmailVerified: 'isEmailVerified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt',
  address: 'address',
  city: 'city',
  country: 'country',
  dateOfBirth: 'dateOfBirth',
  phoneNumber: 'phoneNumber'
};

exports.Prisma.OAuthAccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  provider: 'provider',
  providerId: 'providerId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  type: 'type',
  expiresAt: 'expiresAt',
  used: 'used',
  createdAt: 'createdAt'
};

exports.Prisma.PropertyScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  name: 'name',
  slug: 'slug',
  description: 'description',
  address: 'address',
  city: 'city',
  province: 'province',
  latitude: 'latitude',
  longitude: 'longitude',
  published: 'published',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt',
  category: 'category'
};

exports.Prisma.PropertyImageScalarFieldEnum = {
  id: 'id',
  propertyId: 'propertyId',
  url: 'url',
  altText: 'altText',
  isPrimary: 'isPrimary',
  order: 'order',
  createdAt: 'createdAt'
};

exports.Prisma.RoomScalarFieldEnum = {
  id: 'id',
  propertyId: 'propertyId',
  name: 'name',
  capacity: 'capacity',
  basePrice: 'basePrice',
  description: 'description',
  totalUnits: 'totalUnits',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.RoomImageScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  url: 'url',
  altText: 'altText',
  isPrimary: 'isPrimary',
  order: 'order',
  createdAt: 'createdAt'
};

exports.Prisma.RoomAvailabilityScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  date: 'date',
  isAvailable: 'isAvailable',
  customPrice: 'customPrice',
  priceModifier: 'priceModifier',
  reason: 'reason',
  bookedUnits: 'bookedUnits',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PeakSeasonScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  name: 'name',
  startDate: 'startDate',
  endDate: 'endDate',
  changeType: 'changeType',
  changeValue: 'changeValue',
  applyToAllProperties: 'applyToAllProperties',
  propertyIds: 'propertyIds',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BookingScalarFieldEnum = {
  id: 'id',
  bookingNo: 'bookingNo',
  userId: 'userId',
  status: 'status',
  totalAmount: 'totalAmount',
  paymentMethod: 'paymentMethod',
  paymentProofUrl: 'paymentProofUrl',
  paymentDeadline: 'paymentDeadline',
  checkIn: 'checkIn',
  checkOut: 'checkOut',
  totalGuests: 'totalGuests',
  notes: 'notes',
  confirmedAt: 'confirmedAt',
  completedAt: 'completedAt',
  cancelledAt: 'cancelledAt',
  cancelReason: 'cancelReason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  midtransOrderId: 'midtransOrderId',
  midtransPaymentType: 'midtransPaymentType',
  midtransSettlementTime: 'midtransSettlementTime',
  midtransStatus: 'midtransStatus',
  midtransToken: 'midtransToken'
};

exports.Prisma.BookingItemScalarFieldEnum = {
  id: 'id',
  bookingId: 'bookingId',
  roomId: 'roomId',
  unitCount: 'unitCount',
  unitPrice: 'unitPrice',
  nights: 'nights',
  subTotal: 'subTotal',
  createdAt: 'createdAt'
};

exports.Prisma.WebhookLogScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  eventType: 'eventType',
  status: 'status',
  rawData: 'rawData',
  processed: 'processed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  propertyId: 'propertyId',
  bookingId: 'bookingId',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewReplyScalarFieldEnum = {
  id: 'id',
  reviewId: 'reviewId',
  tenantId: 'tenantId',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  user: 'user',
  tenant: 'tenant'
};

exports.BookingStatus = exports.$Enums.BookingStatus = {
  waiting_for_payment: 'waiting_for_payment',
  waiting_for_confirmation: 'waiting_for_confirmation',
  confirmed: 'confirmed',
  cancelled: 'cancelled',
  expired: 'expired',
  completed: 'completed',
  rejected: 'rejected'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  manual_transfer: 'manual_transfer',
  payment_gateway: 'payment_gateway'
};

exports.PriceChangeType = exports.$Enums.PriceChangeType = {
  nominal: 'nominal',
  percentage: 'percentage'
};

exports.VerificationTokenType = exports.$Enums.VerificationTokenType = {
  email_verification: 'email_verification',
  password_reset: 'password_reset'
};

exports.PropertyCategory = exports.$Enums.PropertyCategory = {
  villa: 'villa',
  house: 'house',
  apartment: 'apartment'
};

exports.Prisma.ModelName = {
  User: 'User',
  OAuthAccount: 'OAuthAccount',
  VerificationToken: 'VerificationToken',
  Property: 'Property',
  PropertyImage: 'PropertyImage',
  Room: 'Room',
  RoomImage: 'RoomImage',
  RoomAvailability: 'RoomAvailability',
  PeakSeason: 'PeakSeason',
  Booking: 'Booking',
  BookingItem: 'BookingItem',
  WebhookLog: 'WebhookLog',
  Review: 'Review',
  ReviewReply: 'ReviewReply'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\final-project-be\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\final-project-be\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nmodel User {\n  id                 Int                 @id @default(autoincrement())\n  name               String?\n  email              String              @unique\n  password           String?\n  role               UserRole\n  avatarUrl          String?             @map(\"avatar_url\")\n  isEmailVerified    Boolean             @default(false) @map(\"is_email_verified\")\n  createdAt          DateTime            @default(now()) @map(\"created_at\")\n  updatedAt          DateTime            @updatedAt @map(\"updated_at\")\n  deletedAt          DateTime?           @map(\"deleted_at\")\n  address            String?\n  city               String?\n  country            String?\n  dateOfBirth        DateTime?           @map(\"date_of_birth\")\n  phoneNumber        String?\n  bookings           Booking[]           @relation(\"UserBookings\")\n  oauthAccounts      OAuthAccount[]\n  peakSeasons        PeakSeason[]\n  properties         Property[]          @relation(\"PropertyOwner\")\n  reviewReplies      ReviewReply[]\n  reviews            Review[]\n  verificationTokens VerificationToken[]\n\n  @@index([email])\n  @@index([role])\n  @@map(\"users\")\n}\n\nmodel OAuthAccount {\n  id           Int      @id @default(autoincrement())\n  userId       Int      @map(\"user_id\")\n  provider     String\n  providerId   String   @map(\"provider_id\")\n  accessToken  String?  @map(\"access_token\")\n  refreshToken String?  @map(\"refresh_token\")\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n  updatedAt    DateTime @updatedAt @map(\"updated_at\")\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerId])\n  @@index([userId])\n  @@map(\"oauth_accounts\")\n}\n\nmodel VerificationToken {\n  id        Int                   @id @default(autoincrement())\n  userId    Int                   @map(\"user_id\")\n  token     String                @unique\n  type      VerificationTokenType\n  expiresAt DateTime              @map(\"expires_at\")\n  used      Boolean               @default(false)\n  createdAt DateTime              @default(now()) @map(\"created_at\")\n  user      User                  @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([token])\n  @@index([userId, type])\n  @@map(\"verification_tokens\")\n}\n\nmodel Property {\n  id          Int              @id @default(autoincrement())\n  tenantId    Int              @map(\"tenant_id\")\n  name        String\n  slug        String           @unique\n  description String?\n  address     String?\n  city        String?\n  province    String?\n  latitude    Float?\n  longitude   Float?\n  published   Boolean          @default(false)\n  createdAt   DateTime         @default(now()) @map(\"created_at\")\n  updatedAt   DateTime         @updatedAt @map(\"updated_at\")\n  deletedAt   DateTime?        @map(\"deleted_at\")\n  category    PropertyCategory @default(house)\n  tenant      User             @relation(\"PropertyOwner\", fields: [tenantId], references: [id])\n  images      PropertyImage[]\n  reviews     Review[]\n  rooms       Room[]\n\n  @@index([slug])\n  @@index([tenantId])\n  @@index([city, province])\n  @@index([published, deletedAt])\n  @@map(\"properties\")\n}\n\nmodel PropertyImage {\n  id         Int      @id @default(autoincrement())\n  propertyId Int      @map(\"property_id\")\n  url        String\n  altText    String?  @map(\"alt_text\")\n  isPrimary  Boolean  @default(false) @map(\"is_primary\")\n  order      Int      @default(0)\n  createdAt  DateTime @default(now()) @map(\"created_at\")\n  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)\n\n  @@index([propertyId, isPrimary])\n  @@map(\"property_images\")\n}\n\nmodel Room {\n  id           Int                @id @default(autoincrement())\n  propertyId   Int                @map(\"property_id\")\n  name         String\n  capacity     Int\n  basePrice    Int                @map(\"base_price\")\n  description  String?\n  totalUnits   Int                @default(1) @map(\"total_units\")\n  createdAt    DateTime           @default(now()) @map(\"created_at\")\n  updatedAt    DateTime           @updatedAt @map(\"updated_at\")\n  deletedAt    DateTime?          @map(\"deleted_at\")\n  bookingItems BookingItem[]\n  availability RoomAvailability[]\n  images       RoomImage[]\n  property     Property           @relation(fields: [propertyId], references: [id])\n\n  @@index([propertyId])\n  @@index([basePrice])\n  @@map(\"rooms\")\n}\n\nmodel RoomImage {\n  id        Int      @id @default(autoincrement())\n  roomId    Int      @map(\"room_id\")\n  url       String\n  altText   String?  @map(\"alt_text\")\n  isPrimary Boolean  @default(false) @map(\"is_primary\")\n  order     Int      @default(0)\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)\n\n  @@index([roomId, isPrimary])\n  @@map(\"room_images\")\n}\n\nmodel RoomAvailability {\n  id            Int      @id @default(autoincrement())\n  roomId        Int      @map(\"room_id\")\n  date          DateTime @db.Date\n  isAvailable   Boolean  @default(true) @map(\"is_available\")\n  customPrice   Int?     @map(\"custom_price\")\n  priceModifier Float?   @map(\"price_modifier\")\n  reason        String?\n  bookedUnits   Int      @default(0) @map(\"booked_units\")\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n  updatedAt     DateTime @updatedAt @map(\"updated_at\")\n  room          Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)\n\n  @@unique([roomId, date])\n  @@index([date])\n  @@index([roomId, date, isAvailable])\n  @@map(\"room_availability\")\n}\n\nmodel PeakSeason {\n  id                   Int             @id @default(autoincrement())\n  tenantId             Int             @map(\"tenant_id\")\n  name                 String\n  startDate            DateTime        @map(\"start_date\") @db.Date\n  endDate              DateTime        @map(\"end_date\") @db.Date\n  changeType           PriceChangeType @map(\"change_type\")\n  changeValue          Float           @map(\"change_value\")\n  applyToAllProperties Boolean         @default(false) @map(\"apply_to_all_properties\")\n  propertyIds          Int[]           @map(\"property_ids\")\n  createdAt            DateTime        @default(now()) @map(\"created_at\")\n  updatedAt            DateTime        @updatedAt @map(\"updated_at\")\n  tenant               User            @relation(fields: [tenantId], references: [id])\n\n  @@index([tenantId])\n  @@index([startDate, endDate])\n  @@map(\"peak_seasons\")\n}\n\nmodel Booking {\n  id                     Int            @id @default(autoincrement())\n  bookingNo              String         @unique @map(\"booking_no\")\n  userId                 Int            @map(\"user_id\")\n  status                 BookingStatus  @default(waiting_for_payment)\n  totalAmount            Int            @map(\"total_amount\")\n  paymentMethod          PaymentMethod? @map(\"payment_method\")\n  paymentProofUrl        String?        @map(\"payment_proof_url\")\n  paymentDeadline        DateTime?      @map(\"payment_deadline\")\n  checkIn                DateTime       @map(\"check_in\") @db.Date\n  checkOut               DateTime       @map(\"check_out\") @db.Date\n  totalGuests            Int            @map(\"total_guests\")\n  notes                  String?\n  confirmedAt            DateTime?      @map(\"confirmed_at\")\n  completedAt            DateTime?      @map(\"completed_at\")\n  cancelledAt            DateTime?      @map(\"cancelled_at\")\n  cancelReason           String?        @map(\"cancel_reason\")\n  createdAt              DateTime       @default(now()) @map(\"created_at\")\n  updatedAt              DateTime       @updatedAt @map(\"updated_at\")\n  midtransOrderId        String?        @map(\"midtrans_order_id\")\n  midtransPaymentType    String?        @map(\"midtrans_payment_type\")\n  midtransSettlementTime DateTime?      @map(\"midtrans_settlement_time\")\n  midtransStatus         String?        @map(\"midtrans_status\")\n  midtransToken          String?        @map(\"midtrans_token\")\n  items                  BookingItem[]\n  user                   User           @relation(\"UserBookings\", fields: [userId], references: [id])\n  reviews                Review?\n\n  @@index([bookingNo])\n  @@index([userId])\n  @@index([status])\n  @@index([checkIn, checkOut])\n  @@index([midtransOrderId])\n  @@map(\"bookings\")\n}\n\nmodel BookingItem {\n  id        Int      @id @default(autoincrement())\n  bookingId Int      @map(\"booking_id\")\n  roomId    Int      @map(\"room_id\")\n  unitCount Int      @map(\"unit_count\")\n  unitPrice Int      @map(\"unit_price\")\n  nights    Int\n  subTotal  Int      @map(\"sub_total\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  booking   Booking  @relation(fields: [bookingId], references: [id], onDelete: Cascade)\n  room      Room     @relation(fields: [roomId], references: [id])\n\n  @@index([bookingId])\n  @@map(\"booking_items\")\n}\n\nmodel WebhookLog {\n  id        Int      @id @default(autoincrement())\n  orderId   String   @map(\"order_id\")\n  eventType String   @map(\"event_type\")\n  status    String\n  rawData   Json     @map(\"raw_data\")\n  processed Boolean  @default(false)\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n\n  @@index([orderId])\n  @@index([eventType])\n  @@index([processed])\n  @@map(\"webhook_logs\")\n}\n\nmodel Review {\n  id         Int          @id @default(autoincrement())\n  userId     Int          @map(\"user_id\")\n  propertyId Int          @map(\"property_id\")\n  bookingId  Int          @unique @map(\"booking_id\")\n  rating     Int\n  comment    String?\n  createdAt  DateTime     @default(now()) @map(\"created_at\")\n  updatedAt  DateTime     @updatedAt @map(\"updated_at\")\n  reply      ReviewReply?\n  booking    Booking      @relation(fields: [bookingId], references: [id])\n  property   Property     @relation(fields: [propertyId], references: [id])\n  user       User         @relation(fields: [userId], references: [id])\n\n  @@index([propertyId])\n  @@index([userId])\n  @@map(\"reviews\")\n}\n\nmodel ReviewReply {\n  id        Int      @id @default(autoincrement())\n  reviewId  Int      @unique @map(\"review_id\")\n  tenantId  Int      @map(\"tenant_id\")\n  content   String\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @updatedAt @map(\"updated_at\")\n  review    Review   @relation(fields: [reviewId], references: [id], onDelete: Cascade)\n  tenant    User     @relation(fields: [tenantId], references: [id])\n\n  @@map(\"review_replies\")\n}\n\nenum UserRole {\n  user\n  tenant\n}\n\nenum BookingStatus {\n  waiting_for_payment\n  waiting_for_confirmation\n  confirmed\n  cancelled\n  expired\n  completed\n  rejected\n}\n\nenum PaymentMethod {\n  manual_transfer\n  payment_gateway\n}\n\nenum PriceChangeType {\n  nominal\n  percentage\n}\n\nenum VerificationTokenType {\n  email_verification\n  password_reset\n}\n\nenum PropertyCategory {\n  villa\n  house\n  apartment\n}\n",
  "inlineSchemaHash": "7553c90d5c765cc2fa8c51f04e533029ea12102d250c4c31b8394ecdc7942700",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"avatar_url\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_email_verified\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"deleted_at\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_of_birth\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookings\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"UserBookings\"},{\"name\":\"oauthAccounts\",\"kind\":\"object\",\"type\":\"OAuthAccount\",\"relationName\":\"OAuthAccountToUser\"},{\"name\":\"peakSeasons\",\"kind\":\"object\",\"type\":\"PeakSeason\",\"relationName\":\"PeakSeasonToUser\"},{\"name\":\"properties\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"PropertyOwner\"},{\"name\":\"reviewReplies\",\"kind\":\"object\",\"type\":\"ReviewReply\",\"relationName\":\"ReviewReplyToUser\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"},{\"name\":\"verificationTokens\",\"kind\":\"object\",\"type\":\"VerificationToken\",\"relationName\":\"UserToVerificationToken\"}],\"dbName\":\"users\"},\"OAuthAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"user_id\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"provider_id\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"access_token\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"refresh_token\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OAuthAccountToUser\"}],\"dbName\":\"oauth_accounts\"},\"VerificationToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"user_id\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"VerificationTokenType\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"used\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVerificationToken\"}],\"dbName\":\"verification_tokens\"},\"Property\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"tenant_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"province\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"published\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"deleted_at\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"PropertyCategory\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PropertyOwner\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"PropertyImage\",\"relationName\":\"PropertyToPropertyImage\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"PropertyToReview\"},{\"name\":\"rooms\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"PropertyToRoom\"}],\"dbName\":\"properties\"},\"PropertyImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"property_id\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"altText\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"alt_text\"},{\"name\":\"isPrimary\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_primary\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"PropertyToPropertyImage\"}],\"dbName\":\"property_images\"},\"Room\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"property_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"basePrice\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"base_price\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalUnits\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_units\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"deleted_at\"},{\"name\":\"bookingItems\",\"kind\":\"object\",\"type\":\"BookingItem\",\"relationName\":\"BookingItemToRoom\"},{\"name\":\"availability\",\"kind\":\"object\",\"type\":\"RoomAvailability\",\"relationName\":\"RoomToRoomAvailability\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"RoomImage\",\"relationName\":\"RoomToRoomImage\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"PropertyToRoom\"}],\"dbName\":\"rooms\"},\"RoomImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"roomId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"room_id\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"altText\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"alt_text\"},{\"name\":\"isPrimary\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_primary\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"RoomToRoomImage\"}],\"dbName\":\"room_images\"},\"RoomAvailability\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"roomId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"room_id\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_available\"},{\"name\":\"customPrice\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"custom_price\"},{\"name\":\"priceModifier\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"price_modifier\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookedUnits\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"booked_units\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"RoomToRoomAvailability\"}],\"dbName\":\"room_availability\"},\"PeakSeason\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"tenant_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"start_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"changeType\",\"kind\":\"enum\",\"type\":\"PriceChangeType\",\"dbName\":\"change_type\"},{\"name\":\"changeValue\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"change_value\"},{\"name\":\"applyToAllProperties\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"apply_to_all_properties\"},{\"name\":\"propertyIds\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"property_ids\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PeakSeasonToUser\"}],\"dbName\":\"peak_seasons\"},\"Booking\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bookingNo\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"booking_no\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"user_id\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"BookingStatus\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_amount\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\",\"dbName\":\"payment_method\"},{\"name\":\"paymentProofUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"payment_proof_url\"},{\"name\":\"paymentDeadline\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"payment_deadline\"},{\"name\":\"checkIn\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"check_in\"},{\"name\":\"checkOut\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"check_out\"},{\"name\":\"totalGuests\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"total_guests\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confirmedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"confirmed_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cancelled_at\"},{\"name\":\"cancelReason\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"cancel_reason\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"midtransOrderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"midtrans_order_id\"},{\"name\":\"midtransPaymentType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"midtrans_payment_type\"},{\"name\":\"midtransSettlementTime\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"midtrans_settlement_time\"},{\"name\":\"midtransStatus\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"midtrans_status\"},{\"name\":\"midtransToken\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"midtrans_token\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"BookingItem\",\"relationName\":\"BookingToBookingItem\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserBookings\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"BookingToReview\"}],\"dbName\":\"bookings\"},\"BookingItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"booking_id\"},{\"name\":\"roomId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"room_id\"},{\"name\":\"unitCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"unit_count\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"unit_price\"},{\"name\":\"nights\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subTotal\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"sub_total\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"booking\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToBookingItem\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"BookingItemToRoom\"}],\"dbName\":\"booking_items\"},\"WebhookLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"order_id\"},{\"name\":\"eventType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"event_type\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rawData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"raw_data\"},{\"name\":\"processed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"webhook_logs\"},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"user_id\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"property_id\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"booking_id\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"reply\",\"kind\":\"object\",\"type\":\"ReviewReply\",\"relationName\":\"ReviewToReviewReply\"},{\"name\":\"booking\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToReview\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"PropertyToReview\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"}],\"dbName\":\"reviews\"},\"ReviewReply\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reviewId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"review_id\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"tenant_id\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToReviewReply\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewReplyToUser\"}],\"dbName\":\"review_replies\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

